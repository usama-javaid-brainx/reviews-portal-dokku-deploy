<div class="" data-controller="photos" data-photos-image-upload-url-value="<%= filestack_image_uploader_reviews_path %>" data-photos-review-id-value="<%= params[:review_id] %>">
  <div class="d-none filestack-notification" data-photos-target="notification">
    Images Saved!
  </div>
  <%= form_with do |f| %>
    <div class="filestack-tabs-content-wrap">
      <% unless @images.present? %>
        <div class="file-upload-place" data-photos-target="fileUploadPlace" id="file-upload-place">
          <div class="content">
            <div class="upload-link">
              <%= f.filestack_field :images_input, 'Upload files', id: 'unique-iddd', input_id: 'unique-input-idsd', pickerOptions: { accept: ["image/*"], onFileUploadFinished: 'callbackOnFileUploadFinished', maxFiles: 50 } %>
              <span>or drag and drop</span>
              <div class="photos-jpg-text">PNG, JGP (max 10MB)</div>
            </div>
          </div>
        </div>
      <% end %>
      <div class="uploaded-files" data-photos-target="jsUploadedFiles" id="js-uploaded-files">
        <div class="mb-3 main-thumbnail">
          <img id="mainThumbnail" data-photos-target="mainImage" src="">
          <%= image_tag("template/image-delete.svg", class: "main-delete-icon", "data-action": "click->photos#mainThumbnailDelete") %>
        </div>
        <div class="d-flex justify-content-between position-relative flex-wrap" data-delete-icon="<%= asset_path("template/image-delete.svg") %>">
          <% if @images.present? %>
            <div id="js-thumbnails" class="d-flex flex-wrap justify-content-between" data-controller="sortable-images">
              <% @images.each do |image_src| %>
                <div class="thumbnail-wrap mt-1" data-photos-target="thumbnailSection" data-action="dragend->photos#sortImages">
                  <img class="small-thumb thumbnail px-0" data-action="click->photos#clickImage" src=<%= image_src %>>
                  <%= image_tag("template/image-delete.svg", class: "delete-icon", "data-action": "click->photos#deleteImage") %>
                  <input type="hidden" class="image-inputs" name="reviews[filestack_image_uploader][]" value=<%= image_src %>>
                </div>
              <% end %>
            </div>
          <% end %>
          <%= f.filestack_field :images_input, '+', class: 'thumbnail upload-button px-0', id: 'unique-iddd', input_id: 'unique-input-idsd', pickerOptions: { accept: ["image/*"], onFileUploadFinished: 'callbackOnFileUploadFinished', maxFiles: 50 } %>
        </div>
      </div>
    </div>
    <button class="d-block mx-auto mt-4 btn btn-primary" type="button" data-action="click->photos#saveImages">Save
      Images
    </button>
  <% end %>
</div>

<script>
    var imagesUrl = new Array;
    const deleteIconUrl = document.getElementById('js-thumbnails').dataset.deleteIcon

    function callbackOnFileUploadFinished(data) {
        imagesUrl.unshift(data.url)
        const imageDiv = document.createElement('div');
        imageDiv.classList.add('thumbnail-wrap')
        imageDiv.setAttribute("data-photos-target", "thumbnailSection");
        imageDiv.setAttribute("data-action", "dragend->photos#sortImages");

        const image = document.createElement('img');
        image.classList.add('thumbnail', 'px-0', 'small-thumb')
        image.setAttribute('src', data.url);
        image.setAttribute("data-action", "click->photos#clickImage");

        const deleteImage = document.createElement('img');
        deleteImage.classList.add('delete-icon')
        deleteImage.setAttribute('src', deleteIconUrl);
        deleteImage.setAttribute("data-action", "click->photos#deleteImage");

        const input = document.createElement('input')
        input.type = "hidden"
        input.classList.add("image-inputs")
        input.name = 'reviews[filestack_image_uploader][]'
        input.value = data.url

        document.getElementById('js-thumbnails').prepend(imageDiv)
        imageDiv.append(image, deleteImage, input)

        updateImage(image)
        document.getElementById('js-uploaded-files').classList.remove('d-none')
        document.getElementById('file-upload-place').classList.add('d-none')
    }

    function updateImage(that) {
        document.getElementById('mainThumbnail').src = that.src
    }
</script>