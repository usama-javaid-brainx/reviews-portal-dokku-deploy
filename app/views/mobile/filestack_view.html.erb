<div class="container">
  <div class="row justify-content-center">
    <div class="col-md-6" data-controller="photos">
      <%= form_with do |f| %>
        <h2 class="my-4">Photos</h2>
        <div class="tabs_content_wrap">
          <div class="file-upload-place" data-photos-target="fileUploadPlace" id="file-upload-place">
            <div class="content">
              <div class="upload-link">
                <%= f.filestack_field :images_input, 'Upload files', id: 'unique-iddd', input_id: 'unique-input-idsd', pickerOptions: { accept: ["image/*"], onFileUploadFinished: 'callbackOnFileUploadFinished', maxFiles: 10 } %>
                <span>or drag and drop</span>
                <div class="photos-jpg-text">PNG, JGP (max 10MB)</div>
              </div>
            </div>
          </div>
          <div class="uploaded-files" data-photos-target="jsUploadedFiles" id="js-uploaded-files">
            <div class="mb-3 main-thumbnail">
              <img id="mainThumbnail" data-photos-target="mainImage" src="">
            </div>
            <div class="d-flex position-relative" id="js-thumbnails" data-controller="sortable-images" data-delete-icon="<%= asset_path("template/image-delete.svg") %>">
              <% if f.object.present? %>
                <% f.object.images.each do |image_src| %>
                  <div class="thumbnail-wrap" data-photos-target="thumbnailSection">
                    <img class="small-thumb thumbnail px-0" data-action="click->photos#clickImage" src=<%= image_src %>>
                    <%= image_tag("template/image-delete.svg", class: "delete-icon", "data-action": "click->photos#deleteImage") %>
                    <input type="hidden" class="image-inputs" name="reviews[filestack_image_uploader][]" value=<%= image_src %>>
                  </div>
                <% end %>
              <% end %>
              <%= f.filestack_field :images_input, '+', class: 'thumbnail upload-button px-0', id: 'unique-iddd', input_id: 'unique-input-idsd', pickerOptions: { accept: ["image/*"], onFileUploadFinished: 'callbackOnFileUploadFinished', maxFiles: 10 } %>
            </div>
          </div>
        </div>
        <button class="mt-5  btn btn-primary" type="button" onclick="submitPhotos()">Save Images</button>
      <% end %>
    </div>
  </div>
</div>

<script>
  let imagesUrl = []

  function submitPhotos() {
    window.location = `justreviewit://filestack_images?images=${imagesUrl}`
  }

  function callbackOnFileUploadFinished(data) {
    imagesUrl.unshift(data.url)
    const imageDiv = document.createElement('div');
    const deleteIconUrl = document.getElementById('js-thumbnails').dataset.deleteIcon
    imageDiv.classList.add('thumbnail-wrap')
    imageDiv.setAttribute("data-photos-target", "thumbnailSection");
    imageDiv.setAttribute("data-action", "dragend->photos#sortImages");

    const image = document.createElement('img');
    image.classList.add('thumbnail', 'px-0', 'small-thumb')
    image.setAttribute('src', data.url);
    image.setAttribute("data-action", "click->photos#clickImage");

    const deleteImage = document.createElement('img');
    deleteImage.classList.add('delete-icon')
    deleteImage.setAttribute('src', deleteIconUrl);
    deleteImage.setAttribute("data-action", "click->photos#deleteImage");

    const input = document.createElement('input')
    input.type = "hidden"
    input.classList.add("image-inputs")
    input.name = 'reviews[filestack_image_uploader][]'
    input.value = data.url

    document.getElementById('js-thumbnails').prepend(imageDiv)
    imageDiv.append(image, deleteImage, input)

    updateImage(image)
    document.getElementById('js-uploaded-files').classList.remove('d-none')
    document.getElementById('file-upload-place').classList.add('d-none')
  }

  function updateImage(that) {
    document.getElementById('mainThumbnail').src = that.src
  }
</script>